{"version":3,"sources":["components/QueryForm.js","components/ListTweets.js","components/Loading.js","components/QueryTypeSelector.js","components/QueryOrderSelector.js","components/App.js","index.js"],"names":["QueryForm","props","value","query","onChange","handleQueryChange","onClick","queryTweets","type","ListTweets","tweets","length","map","tweet","text","favorite_count","retweet_count","id","Loading","loading","src","alt","width","height","QueryTypeSelector","QueryType","handleQueryTypeChange","QueryOrderSelector","queryOrder","handleQueryOrderChange","App","useState","setQuery","setUser","setTweets","setLoading","queryType","setQueryType","setQueryOrder","event","target","console","log","axios","post","then","response","data","user","ReactDOM","render","document","getElementById"],"mappings":"iLASeA,EAPG,SAACC,GAAD,OACd,qCACK,uBAAOC,MAAOD,EAAME,MAAOC,SAAUH,EAAMI,oBAC5C,wBAAQC,QAASL,EAAMM,YAAaC,KAAK,SAAzC,4BCcOC,EAjBI,SAACR,GAEhB,IAAIS,EAAST,EAAMS,OAEnB,OAAqB,IAAlBA,EAAOC,OAAqB,KAEjBD,EAAOE,KAAI,SAAAC,GAAK,OAC1B,gCACKA,EAAMC,KACP,wCAAWD,EAAME,kBACjB,2CAAcF,EAAMG,iBACpB,yBAJMH,EAAMI,QCMTC,EAbC,SAACjB,GAEb,OAAsB,IAAlBA,EAAMkB,QAEF,qBAAKF,GAAG,UAAR,SACI,qBAAKG,IAAI,cAAcC,IAAI,iBAAiBC,MAAM,MAAMC,OAAO,SAIhE,MCIAC,EAbW,SAACvB,GAAD,OACtB,+BACI,6CAEI,yBAAQC,MAAOD,EAAMwB,UAAWrB,SAAUH,EAAMyB,sBAAhD,UACI,wBAAQxB,MAAM,YAAd,mBACA,wBAAQA,MAAM,WAAd,mBACA,wBAAQA,MAAM,OAAd,2BCKDyB,EAZY,SAAC1B,GAAD,OACvB,+BACI,8CAEI,yBAAQC,MAAOD,EAAM2B,WAAYxB,SAAUH,EAAM4B,uBAAjD,UACI,wBAAQ3B,MAAM,MAAd,uBACA,wBAAQA,MAAM,OAAd,iC,iBCmDD4B,EAhDH,WAAO,IAAD,EAEcC,mBAAS,IAFvB,mBAEN5B,EAFM,KAEC6B,EAFD,OAGYD,mBAAS,MAHrB,mBAGAE,GAHA,aAIgBF,mBAAS,IAJzB,mBAINrB,EAJM,KAIEwB,EAJF,OAKkBH,oBAAS,GAL3B,mBAKNZ,EALM,KAKGgB,EALH,OAMsBJ,mBAAS,aAN/B,mBAMNK,EANM,KAMKC,EANL,OAOwBN,mBAAS,QAPjC,mBAONH,EAPM,KAOMU,EAPN,KAoCd,OACI,gCACI,2CACA,cAAC,EAAD,CAAmBF,UAAWA,EAAWV,sBA1BnB,SAACa,GAC3BF,EAAaE,EAAMC,OAAOtC,UA0BtB,cAAC,EAAD,CAAoB0B,WAAYA,EAAYC,uBAvBrB,SAACU,GAC5BD,EAAcC,EAAMC,OAAOtC,UAuBvB,cAAC,EAAD,CAAWC,MAAOA,EAAOE,kBAhCP,SAACkC,GACvBP,EAASO,EAAMC,OAAOtC,QA+B6CK,YApBnD,WAChBkC,QAAQC,IAAI,QAASvC,GACrBgC,GAAW,GAGXQ,IAAMC,KAAK,cAAe,CAAEzC,QAAOiC,YAAWR,eACzCiB,MAAK,SAAAC,GACFL,QAAQC,IAAII,EAASC,KAAKC,MAC1Bf,EAAQa,EAASC,KAAKC,MACtBd,EAAUY,EAASC,KAAKrC,QACxByB,GAAW,SAWf,cAAC,EAAD,CAAShB,QAASA,IAClB,cAAC,EAAD,CAAYT,OAAQA,Q,MCjDhCuC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e0dff1c5.chunk.js","sourcesContent":["import React from 'react'\n\nconst QueryForm = (props) => (\n    <form>\n        @<input value={props.query} onChange={props.handleQueryChange}/>\n        <button onClick={props.queryTweets} type=\"submit\">Get Tweets</button>\n    </form>\n)\n\nexport default QueryForm","import React from 'react'\n\nconst ListTweets = (props) => {\n\n    let tweets = props.tweets\n\n    if(tweets.length === 0) return null\n\n    let content = tweets.map(tweet => \n        <div key={tweet.id}>\n            {tweet.text}\n            <p>Likes: {tweet.favorite_count}</p>\n            <p>Retweets: {tweet.retweet_count}</p>\n            <br></br>\n        </div>\n        )\n    return content\n}\n\nexport default ListTweets","import React from 'react'\n\nconst Loading = (props) => {\n\n    if (props.loading === true) {\n        return (\n            <div id=\"loading\"> \n                <img src=\"loading.gif\" alt=\"loading symbol\" width=\"100\" height=\"25\"/> \n            </div>\n        )\n    } else {\n        return null\n    }\n}\n\nexport default Loading","import React from 'react'\n\nconst QueryTypeSelector = (props) => (\n    <form>\n        <label>\n            Sort by:\n            <select value={props.QueryType} onChange={props.handleQueryTypeChange}>\n                <option value=\"favorites\">Likes</option>\n                <option value=\"retweets\">Reach</option>\n                <option value=\"date\">Date</option>\n            </select>\n        </label>\n    </form>\n)\n\nexport default QueryTypeSelector","import React from 'react'\n\nconst QueryOrderSelector = (props) => (\n    <form>\n        <label>\n            In order:\n            <select value={props.queryOrder} onChange={props.handleQueryOrderChange}>\n                <option value=\"asc\">Ascending</option>\n                <option value=\"desc\">Descending</option>\n            </select>\n        </label>\n    </form>\n)\n\nexport default QueryOrderSelector","import React, { useState } from 'react'\nimport QueryForm from './QueryForm'\nimport ListTweets from './ListTweets'\nimport Loading from './Loading'\nimport QueryTypeSelector from './QueryTypeSelector'\nimport handleQueryOrderSelector from './QueryOrderSelector'\nimport axios from 'axios'\nimport QueryOrderSelector from './QueryOrderSelector'\n\n\n\nconst App = () => {\n\n    const [ query, setQuery ] = useState(\"\") // [ ] query can be expanded to include query params\n    const [ user, setUser ] = useState(null)\n    const [ tweets, setTweets ] = useState([])\n    const [ loading, setLoading ] = useState(false)\n    const [ queryType, setQueryType ] = useState(\"favorites\")\n    const [ queryOrder, setQueryOrder ] = useState(\"desc\")\n\n    const handleQueryChange = (event) =>  {\n        setQuery(event.target.value)\n    }\n\n    const handleQueryTypeChange = (event) => {\n        setQueryType(event.target.value)\n    }\n\n    const handleQueryOrderChange = (event) => {\n        setQueryOrder(event.target.value)\n    }\n\n    const queryTweets = () => {\n        console.log('query', query)\n        setLoading(true)\n\n        // post request because we need to send some data to form the query params\n        axios.post('/api/query/', { query, queryType, queryOrder })\n            .then(response => {\n                console.log(response.data.user)\n                setUser(response.data.user)\n                setTweets(response.data.tweets)\n                setLoading(false)\n            })\n\n    }\n\n    return (\n        <div>\n            <h2>tweetsort</h2>\n            <QueryTypeSelector queryType={queryType} handleQueryTypeChange={handleQueryTypeChange}/>\n            <QueryOrderSelector queryOrder={queryOrder} handleQueryOrderChange={handleQueryOrderChange}/>\n            <QueryForm query={query} handleQueryChange={handleQueryChange} queryTweets={queryTweets}/>\n            <Loading loading={loading}/>\n            <ListTweets tweets={tweets}/>\n        </div>\n    )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}