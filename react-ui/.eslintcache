[{"/home/averywlittle/code/tweetsort/react-ui/src/index.js":"1","/home/averywlittle/code/tweetsort/react-ui/src/components/App.js":"2","/home/averywlittle/code/tweetsort/react-ui/src/components/QueryForm.js":"3","/home/averywlittle/code/tweetsort/react-ui/src/components/ListTweets.js":"4","/home/averywlittle/code/tweetsort/react-ui/src/components/Loading.js":"5","/home/averywlittle/code/tweetsort/react-ui/src/components/QueryOrderSelector.js":"6","/home/averywlittle/code/tweetsort/react-ui/src/components/QueryTypeSelector.js":"7","/home/averywlittle/code/tweetsort/react-ui/src/components/PageSelector.js":"8","/home/averywlittle/code/tweetsort/react-ui/src/components/InfoPanel.js":"9"},{"size":173,"mtime":1608171779166,"results":"10","hashOfConfig":"11"},{"size":3122,"mtime":1608235701743,"results":"12","hashOfConfig":"11"},{"size":290,"mtime":1608236398284,"results":"13","hashOfConfig":"11"},{"size":589,"mtime":1608234377281,"results":"14","hashOfConfig":"11"},{"size":320,"mtime":1608171896385,"results":"15","hashOfConfig":"11"},{"size":436,"mtime":1608236344171,"results":"16","hashOfConfig":"11"},{"size":470,"mtime":1608236341243,"results":"17","hashOfConfig":"11"},{"size":430,"mtime":1608236078851,"results":"18","hashOfConfig":"11"},{"size":1130,"mtime":1608236049742,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1g1krt3",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},"/home/averywlittle/code/tweetsort/react-ui/src/index.js",[],["41","42"],"/home/averywlittle/code/tweetsort/react-ui/src/components/App.js",["43"],"import React, { useState } from 'react'\nimport QueryForm from './QueryForm'\nimport ListTweets from './ListTweets'\nimport Loading from './Loading'\nimport QueryTypeSelector from './QueryTypeSelector'\nimport QueryOrderSelector from './QueryOrderSelector'\nimport PageSelector from './PageSelector'\nimport InfoPanel from './InfoPanel'\nimport axios from 'axios'\n\n\nconst App = () => {\n\n    const [ query, setQuery ] = useState(\"\")\n    const [ user, setUser ] = useState(null)\n    const [ tweets, setTweets ] = useState([])\n    const [ loading, setLoading ] = useState(false)\n    const [ queryType, setQueryType ] = useState(\"favorites\")\n    const [ queryOrder, setQueryOrder ] = useState(\"desc\")\n    const [ page, setPage ] = useState(1)\n\n    const handleQueryChange = (event) =>  {\n        setQuery(event.target.value)\n    }\n\n    const handleQueryTypeChange = (event) => {\n        event.preventDefault()\n        setQueryType(event.target.value)\n    }\n\n    const handleQueryOrderChange = (event) => {\n        event.preventDefault()\n        setQueryOrder(event.target.value)\n    }\n\n    // page cannot go lower than 1 or higher than tweets.length/10 + 1\n    const handlePageUp = (event) => {\n        event.preventDefault()\n        if (tweets.length !== 0) {\n\n            if (page <= (Math.ceil(tweets.length/10))) {\n                setPage(page + 1)\n            }\n            else console.log('Page maximum')\n        }\n        console.log('Page', page)\n    }\n\n    const handlePageDown = (event) => {\n        event.preventDefault()\n        if (tweets.length !== 0) {\n            if (page !== 1) {\n                setPage(page - 1)\n            }\n            else console.log('Page minimum')\n        }\n        console.log('Page', page)\n    }\n\n    const queryTweets = () => {\n        console.log('query', query)\n        setLoading(true)\n\n        const queryObject = { query, queryType, queryOrder }\n\n        // post request because we need to send some data to form the query params\n        axios.post('/api/query/', queryObject)\n            .then(response => {\n                console.log(response.data.user)\n                console.log('tweets returned', response.data.tweets.length)\n                setUser(response.data.user)\n                setTweets(response.data.tweets)\n                setLoading(false)\n            })\n            .catch(error => console.log('POST ERROR', error))\n\n    }\n\n    return (\n        <div>\n            <h2>tweetsort</h2>\n            <QueryTypeSelector queryType={queryType} handleQueryTypeChange={handleQueryTypeChange}/>\n            <QueryOrderSelector queryOrder={queryOrder} handleQueryOrderChange={handleQueryOrderChange}/>\n            <QueryForm query={query} handleQueryChange={handleQueryChange} queryTweets={queryTweets}/>\n            <Loading loading={loading}/>\n            <InfoPanel tweetsLength={tweets.length} page={page} maxPage={Math.ceil(tweets.length/10)}/>\n            <ListTweets tweets={tweets} page={page}/>\n            <PageSelector page={page} handlePageUp={handlePageUp} handlePageDown={handlePageDown} tweetsLength={tweets.length}/>\n        </div>\n    )\n}\n\nexport default App","/home/averywlittle/code/tweetsort/react-ui/src/components/QueryForm.js",[],"/home/averywlittle/code/tweetsort/react-ui/src/components/ListTweets.js",[],"/home/averywlittle/code/tweetsort/react-ui/src/components/Loading.js",[],"/home/averywlittle/code/tweetsort/react-ui/src/components/QueryOrderSelector.js",[],"/home/averywlittle/code/tweetsort/react-ui/src/components/QueryTypeSelector.js",[],"/home/averywlittle/code/tweetsort/react-ui/src/components/PageSelector.js",[],"/home/averywlittle/code/tweetsort/react-ui/src/components/InfoPanel.js",["44","45"],"import React from 'react'\n\nconst ListTweets = (props) => {\n\n    // Error message can show here\n    if(props.tweetsLength === 0)\n    {\n        return (\n        <div>\n            <h3>Welcome to this sorting tool!</h3>\n            <p>Type in a twitter username (the one with the '@' before it) to get up to 3,200 of an account's most recent tweets. You can sort their tweets by Date, Likes, or Retweets, and choose either ascending or descending order.</p>\n            <p>A loading symbol will show while the tweets are being fetched. If this area is empty (not even this welcome message) it means the tweets are being rendered :)</p>\n            <p>If you enjoy this little tool, follow me <a href=\"https://twitter.com/averywlittle\" target=\"_blank\">@averywlittle</a>.</p>\n            <p>The code is available <a href=\"https://github.com/averywlittle/tweetsort\" target=\"_blank\">here</a>.</p>\n        </div>\n        )\n    } else {\n        return (\n            <div>\n                <p>{props.tweetsLength} tweets loaded! Showing page {props.page} of {props.maxPage}.</p>\n            </div>\n        )\n    }\n}\n\nexport default ListTweets",{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":15,"column":13,"nodeType":"52","messageId":"53","endLine":15,"endColumn":17},{"ruleId":"54","severity":1,"message":"55","line":13,"column":100,"nodeType":"56","endLine":13,"endColumn":115},{"ruleId":"54","severity":1,"message":"55","line":14,"column":90,"nodeType":"56","endLine":14,"endColumn":105},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation"]